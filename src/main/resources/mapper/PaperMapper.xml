<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ncu.study.autopaper.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="ncu.study.autopaper.model.Paper">
    <constructor>
      <idArg column="PAPER_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PAPER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TYPE_COUNT_COLLECTION" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PAPER_DIFFICULTY" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PAPER_HOT" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PAPER_GRADE_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PAPER_GRADE_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PAPER_COURSE_ID" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="PAPER_COURSE_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PAPER_VERSION" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PAPER_SCORES" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TOTAL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="SCORE" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="TIME" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PAPER_URL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="OWNER" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PAPER_ID, PAPER_NAME, TYPE_COUNT_COLLECTION, PAPER_DIFFICULTY, PAPER_HOT, PAPER_GRADE_ID, 
    PAPER_GRADE_NAME, PAPER_COURSE_ID, PAPER_COURSE_NAME, PAPER_VERSION, PAPER_SCORES, 
    TOTAL, SCORE, TIME, PAPER_URL, OWNER, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="ncu.study.autopaper.model.PaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paper
    where PAPER_ID = #{paperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paper
    where PAPER_ID = #{paperId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ncu.study.autopaper.model.PaperExample">
    delete from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ncu.study.autopaper.model.Paper">
    insert into paper (PAPER_ID, PAPER_NAME, TYPE_COUNT_COLLECTION, 
      PAPER_DIFFICULTY, PAPER_HOT, PAPER_GRADE_ID, 
      PAPER_GRADE_NAME, PAPER_COURSE_ID, PAPER_COURSE_NAME, 
      PAPER_VERSION, PAPER_SCORES, TOTAL, 
      SCORE, TIME, PAPER_URL, 
      OWNER, CREATE_TIME)
    values (#{paperId,jdbcType=INTEGER}, #{paperName,jdbcType=VARCHAR}, #{typeCountCollection,jdbcType=VARCHAR}, 
      #{paperDifficulty,jdbcType=INTEGER}, #{paperHot,jdbcType=INTEGER}, #{paperGradeId,jdbcType=VARCHAR}, 
      #{paperGradeName,jdbcType=VARCHAR}, #{paperCourseId,jdbcType=CHAR}, #{paperCourseName,jdbcType=VARCHAR}, 
      #{paperVersion,jdbcType=VARCHAR}, #{paperScores,jdbcType=VARCHAR}, #{total,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{time,jdbcType=INTEGER}, #{paperUrl,jdbcType=VARCHAR}, 
      #{owner,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="ncu.study.autopaper.model.Paper">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paperId != null">
        PAPER_ID,
      </if>
      <if test="paperName != null">
        PAPER_NAME,
      </if>
      <if test="typeCountCollection != null">
        TYPE_COUNT_COLLECTION,
      </if>
      <if test="paperDifficulty != null">
        PAPER_DIFFICULTY,
      </if>
      <if test="paperHot != null">
        PAPER_HOT,
      </if>
      <if test="paperGradeId != null">
        PAPER_GRADE_ID,
      </if>
      <if test="paperGradeName != null">
        PAPER_GRADE_NAME,
      </if>
      <if test="paperCourseId != null">
        PAPER_COURSE_ID,
      </if>
      <if test="paperCourseName != null">
        PAPER_COURSE_NAME,
      </if>
      <if test="paperVersion != null">
        PAPER_VERSION,
      </if>
      <if test="paperScores != null">
        PAPER_SCORES,
      </if>
      <if test="total != null">
        TOTAL,
      </if>
      <if test="score != null">
        SCORE,
      </if>
      <if test="time != null">
        TIME,
      </if>
      <if test="paperUrl != null">
        PAPER_URL,
      </if>
      <if test="owner != null">
        OWNER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paperId != null">
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="paperName != null">
        #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="typeCountCollection != null">
        #{typeCountCollection,jdbcType=VARCHAR},
      </if>
      <if test="paperDifficulty != null">
        #{paperDifficulty,jdbcType=INTEGER},
      </if>
      <if test="paperHot != null">
        #{paperHot,jdbcType=INTEGER},
      </if>
      <if test="paperGradeId != null">
        #{paperGradeId,jdbcType=VARCHAR},
      </if>
      <if test="paperGradeName != null">
        #{paperGradeName,jdbcType=VARCHAR},
      </if>
      <if test="paperCourseId != null">
        #{paperCourseId,jdbcType=CHAR},
      </if>
      <if test="paperCourseName != null">
        #{paperCourseName,jdbcType=VARCHAR},
      </if>
      <if test="paperVersion != null">
        #{paperVersion,jdbcType=VARCHAR},
      </if>
      <if test="paperScores != null">
        #{paperScores,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="paperUrl != null">
        #{paperUrl,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ncu.study.autopaper.model.PaperExample" resultType="java.lang.Long">
    select count(*) from paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update paper
    <set>
      <if test="record.paperId != null">
        PAPER_ID = #{record.paperId,jdbcType=INTEGER},
      </if>
      <if test="record.paperName != null">
        PAPER_NAME = #{record.paperName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCountCollection != null">
        TYPE_COUNT_COLLECTION = #{record.typeCountCollection,jdbcType=VARCHAR},
      </if>
      <if test="record.paperDifficulty != null">
        PAPER_DIFFICULTY = #{record.paperDifficulty,jdbcType=INTEGER},
      </if>
      <if test="record.paperHot != null">
        PAPER_HOT = #{record.paperHot,jdbcType=INTEGER},
      </if>
      <if test="record.paperGradeId != null">
        PAPER_GRADE_ID = #{record.paperGradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.paperGradeName != null">
        PAPER_GRADE_NAME = #{record.paperGradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.paperCourseId != null">
        PAPER_COURSE_ID = #{record.paperCourseId,jdbcType=CHAR},
      </if>
      <if test="record.paperCourseName != null">
        PAPER_COURSE_NAME = #{record.paperCourseName,jdbcType=VARCHAR},
      </if>
      <if test="record.paperVersion != null">
        PAPER_VERSION = #{record.paperVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.paperScores != null">
        PAPER_SCORES = #{record.paperScores,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        TOTAL = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        SCORE = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        TIME = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.paperUrl != null">
        PAPER_URL = #{record.paperUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null">
        OWNER = #{record.owner,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update paper
    set PAPER_ID = #{record.paperId,jdbcType=INTEGER},
      PAPER_NAME = #{record.paperName,jdbcType=VARCHAR},
      TYPE_COUNT_COLLECTION = #{record.typeCountCollection,jdbcType=VARCHAR},
      PAPER_DIFFICULTY = #{record.paperDifficulty,jdbcType=INTEGER},
      PAPER_HOT = #{record.paperHot,jdbcType=INTEGER},
      PAPER_GRADE_ID = #{record.paperGradeId,jdbcType=VARCHAR},
      PAPER_GRADE_NAME = #{record.paperGradeName,jdbcType=VARCHAR},
      PAPER_COURSE_ID = #{record.paperCourseId,jdbcType=CHAR},
      PAPER_COURSE_NAME = #{record.paperCourseName,jdbcType=VARCHAR},
      PAPER_VERSION = #{record.paperVersion,jdbcType=VARCHAR},
      PAPER_SCORES = #{record.paperScores,jdbcType=VARCHAR},
      TOTAL = #{record.total,jdbcType=INTEGER},
      SCORE = #{record.score,jdbcType=INTEGER},
      TIME = #{record.time,jdbcType=INTEGER},
      PAPER_URL = #{record.paperUrl,jdbcType=VARCHAR},
      OWNER = #{record.owner,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ncu.study.autopaper.model.Paper">
    update paper
    <set>
      <if test="paperName != null">
        PAPER_NAME = #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="typeCountCollection != null">
        TYPE_COUNT_COLLECTION = #{typeCountCollection,jdbcType=VARCHAR},
      </if>
      <if test="paperDifficulty != null">
        PAPER_DIFFICULTY = #{paperDifficulty,jdbcType=INTEGER},
      </if>
      <if test="paperHot != null">
        PAPER_HOT = #{paperHot,jdbcType=INTEGER},
      </if>
      <if test="paperGradeId != null">
        PAPER_GRADE_ID = #{paperGradeId,jdbcType=VARCHAR},
      </if>
      <if test="paperGradeName != null">
        PAPER_GRADE_NAME = #{paperGradeName,jdbcType=VARCHAR},
      </if>
      <if test="paperCourseId != null">
        PAPER_COURSE_ID = #{paperCourseId,jdbcType=CHAR},
      </if>
      <if test="paperCourseName != null">
        PAPER_COURSE_NAME = #{paperCourseName,jdbcType=VARCHAR},
      </if>
      <if test="paperVersion != null">
        PAPER_VERSION = #{paperVersion,jdbcType=VARCHAR},
      </if>
      <if test="paperScores != null">
        PAPER_SCORES = #{paperScores,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        TOTAL = #{total,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        SCORE = #{score,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        TIME = #{time,jdbcType=INTEGER},
      </if>
      <if test="paperUrl != null">
        PAPER_URL = #{paperUrl,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        OWNER = #{owner,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PAPER_ID = #{paperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ncu.study.autopaper.model.Paper">
    update paper
    set PAPER_NAME = #{paperName,jdbcType=VARCHAR},
      TYPE_COUNT_COLLECTION = #{typeCountCollection,jdbcType=VARCHAR},
      PAPER_DIFFICULTY = #{paperDifficulty,jdbcType=INTEGER},
      PAPER_HOT = #{paperHot,jdbcType=INTEGER},
      PAPER_GRADE_ID = #{paperGradeId,jdbcType=VARCHAR},
      PAPER_GRADE_NAME = #{paperGradeName,jdbcType=VARCHAR},
      PAPER_COURSE_ID = #{paperCourseId,jdbcType=CHAR},
      PAPER_COURSE_NAME = #{paperCourseName,jdbcType=VARCHAR},
      PAPER_VERSION = #{paperVersion,jdbcType=VARCHAR},
      PAPER_SCORES = #{paperScores,jdbcType=VARCHAR},
      TOTAL = #{total,jdbcType=INTEGER},
      SCORE = #{score,jdbcType=INTEGER},
      TIME = #{time,jdbcType=INTEGER},
      PAPER_URL = #{paperUrl,jdbcType=VARCHAR},
      OWNER = #{owner,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where PAPER_ID = #{paperId,jdbcType=INTEGER}
  </update>
</mapper>