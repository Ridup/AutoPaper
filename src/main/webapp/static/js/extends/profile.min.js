(function (win) {
    var template = function (id) {
        return _.template($.trim($(id).html()));
    };

    // 主视图
    var LayoutView = Backbone.View.extend({
        el: '#region',
        initialize: function () {
            this.profile = new ProfileView({ parentView: this });
            this.form = new ProfileForm({ parentView: this });
            this.changeView(this.profile);
        },
        changeView: function (view) {
            if (this.currentView) this.currentView.undelegateEvents();
            this.currentView = view;
            view.render();
            view.delegateEvents();
            this.$el.html(view.$el);
        }
    });

    // 编辑视图
    var ProfileForm = Backbone.View.extend({
        className: 'user-mn',
        initialize: function (option) {
            _.extend(this, option);
            this.listenTo(this.parentView, 'render-form', function () {
                this.parentView.changeView(this);
            });
        },
        render: function () {
            var _this = this;
            this.$el.html(template('#tpl-edit')(this.parentView.model.toJSON()));
            this.initRadios();
            var v = this.parentView.model.get('xd');
            var k = this.parentView.model.get('xueke');
            this.fetch_xueke(v['xd']).done(function(htm) {
                _this.$el.find('select[name=xueke]').html(htm);
                _this.$el.find('select[name=xueke] option').each(function() {
                    if (this.value == k['xueke']) {
                        $(this).prop('selected', true);
                        return true;
                    }
                });
            });
            return this;
        },
        initRadios: function () {
            var self = this;
            this.$el.find('.radio-wrap').each(function () {
                var g = [];
                var canclick = true;
                var is_identity = $(this).hasClass('identity-wrap');
                if (is_identity) {
                    var len = $(this).find('.m-radio > input:checked').length;
                    if (len > 0) canclick = false; // 如果已经设置身份，不可以再设置
                }
                $(this).find('.m-radio').each(function () {
                    var _radio = new RadioInput(this, g);
                    if (!canclick) _radio.disable();
                    if (is_identity) {
                        self.parentView.on('radio-disable', function () {
                            _radio.disable();
                        });
                    }
                });
            });
        },
        events: {
            'submit form': 'save',
            'click .j-cancel': 'cancel',
            'click #school': 'search_school',
            'change select[name=xd]':'xd_select'
        },
        xd_select: function(e){
            var self = this;
            var $o = $(e.target);
            data = {
                'xd':$o.val()
            }
            this.fetch_xueke($o.val()).done(function(htm) {
                $('select[name=xueke]').html(htm);
            });
            
        },
        fetch_xueke: function(xd) {
            var dtd = $.Deferred();
            var _this = this;
            $.get('/account/profile',{xd: xd},'json')
                .done(function(data){
                    $('select[name=xueke]').html('<option value="">请选择版本</option>');
                    if (!data || data == 0) {
                        dtd.reject();
                        return false;
                    }
                    dtd.resolve(_this.render_options(data));
                });
            return dtd.promise();
        },

        save: function (evt) {
            var $div = $('<div class="popup-box">编辑成功</div>');
            var self = this;
            var $f = $(evt.target);
            var action = $f.attr('action');
            if (!this.validate()) return false;
            $.post(action, $f.serializeArray(), 'json')
                .done(function (res) {
                    self.parentView.model.set(res);
                    if (res.identity && res.identity.value) {
                        self.parentView.trigger('radio-disable');
                    }
                    self.parentView.trigger('render-profile');
                    $div.stop().css({
                        top: '50%',
                        opacity: 1
                        }).appendTo(document.body);
                        if (t) { clearTimeout(t); }
                        t = setTimeout(function(){
                            $div.animate({
                                    top: 150,
                                    opacity: 0,
                                }, 'fast');
                                t = null;
                        },1000);   
                    });
            return false;
        },
        cancel: function (evt) {
            this.parentView.trigger('render-profile');
            return false;
        },
        search_school: function (evt) {
            var link_select = new SchoolView(this);
            layer.open(ns.layer_defaults(link_select.$el, {
                area: '600px'
            }));
        },
        validate: function () {
            var d = this.$el.find('form.myform').serializeArray();
            var $identity = this.$el.find('input[name=identity]:checked');
            if ($identity.length == 0) {
                layer.msg('请设置你的身份！', { icon: 3 });
                return false;
            }
            return true;
        },
        render_options: function (data) { 
           
           console.log(data[0]);
            var htm = '';
            $.each(data[0], function (k, v) { 
                htm += '<option value="' + v.value + '">' + v.label + '</option>';
            });
            return htm;
        },

    });


    var SchoolView = function (_profileForm) {
        this.$el = null;
        this.result = {
            province: 0,
            city: 0,
            county: 0
        };
        this.list = {
            'province': null,
            'city': null,
            'county': null
        };
        this.form = _profileForm;
        this.init();
        
    };
    SchoolView.cache = {}; // 数据缓存
    $.extend(SchoolView.prototype, {
        init: function () { 
            this.$el = $(template('#tpl-school')({ self: this }));
            this.events();
        },
        fetchData: function (type, upid) {
            var self = this;
            var args = upid ?  {upid: upid} : {};
            var key = type + '-' + upid;
            var dtd = $.Deferred();
            if (SchoolView.cache[key]) {
                return dtd.resolve(SchoolView.cache[key]);
            }
            $.get('/account/distselect', args, 'json')
                .done(function (res) {
                    if (res) {
                        SchoolView.cache[key] = res;
                        return dtd.resolve(res);
                    }
                    dtd.reject('暂无数据.')
                })
                .fail(function () {
                    dtd.reject('获取数据失败.');
                });
            return dtd.promise();
        },
        events: function () { 
            var self = this;
            this.$el.on('before-render', function (evt) {
                self.render();
            });



            // 省市区选择
            this.$el.on('change', 'select', function (evt) {
                self.result.schoolname = null;
                if (this.name == 'province') {
                    self.result.province = evt.target.value;
                    self.result.city = 0;
                    self.result.county = 0;
                    self.renderList();
                    self.fetchData('city', self.result.province).done(function (data) {
                        self.list['city'] = data;
                        self.renderLink();
                    });
                }
                else if (this.name == 'city') {
                    self.result.city = evt.target.value;
                    self.result.county = 0;
                    self.renderList();
                    self.fetchData('county', self.result.city).done(function (data) {
                        self.list['county'] = data;
                        self.renderLink();
                    });
                }
                else if (this.name == 'county') {
                    self.result.county = evt.target.value;
                    self.renderList();
                }
            });
            this.$el.on('click', '.page-list a', function (evt) {
                self.renderList(this.href);
                return false;
            });
            // 学校列表点击选择
            this.$el.on('click', '#pop-list li', function () {
                var id = $(this).data('id');
                var name = this.innerHTML;
                self.form.$el.find('#school').val(name);
                self.form.$el.find('#baseid').val(id);
                self.$el.trigger('close');

            });
            this.$el.on('submit', 'form.pop-form', function () {
                var v = $('#sch-name', this).val();
                if ($.trim(v).length == 0) return false;
                self.result.schoolname = v;
                self.renderList();
                return false; 
            });
        },
        render: function () {
            var self = this;
            var $doc = $(template('#tpl-school')({ self: this }));
            this.$el.html($doc.html());
            this.renderList();
            this.fetchData('province').done(function (data) {
                self.list['province'] = data;
                self.renderLink();
            });
        },
        renderLink: function () { 
            this.$el.find('#link-select').html(template('#tpl-select')({ self: this }));
            
        },
        // 获取学校数据
        getSchools: function (key) { 
            var dtd = $.Deferred();
            // var args = this.result;
            // var key = _.values(args).join('-');
            var params = $.param(this.result);
            var key = key || '/account/customerlist?' + params;
            if (SchoolView.cache[key]) {
                return dtd.resolve(SchoolView.cache[key]);
            }
            // $.get('/account/customerlist', args, 'json')
            $.getJSON(key)
                .done(function (res) {
                    if (res.errcode == 0) {
                        SchoolView.cache[key] = res;
                        dtd.resolve(res);
                    }
                    else dtd.reject('暂无数据')
                })
                .fail(function() { dtd.reject('数据获取失败') });
            return dtd.promise();
        },
        // 渲染学校列表
        renderList: function (key) {
            var self = this;
            this.getSchools(key).done(function (data) {
                self.$el.find('#pop-list').html(template('#tpl-list')(data));
            })
        }
    
    });

    // 单选框
    var RadioInput = function (el, g) {
        this.g = g;
        this.g.push(this);
        this.$el = $(el);
        this.init();
    };
    $.extend(RadioInput.prototype, {
        init: function () {
            this.$input = this.$el.find('input[type=radio]');
            this.checked = this.$input.prop('checked');
            if (this.checked) this.$el.addClass('checked');
            this.events();
        },
        switchState: function (state) {
            if (typeof state !== 'undefined') state = !!state;
            else state = !state;
            this.$el[state ? 'addClass' : 'removeClass']('checked');
            this.$input.prop('checked', state);
        },
        events: function () { 
            var self = this;
            this.$el.on('click', function () {
                $.each(self.g, function (k, item) {
                    if (item == self) item.switchState(true);
                    else item.switchState(false);
                });
            });
        },
        disable: function () {
            this.$el.off('click');
        }
    });

    // 个人资料
    var ProfileView = Backbone.View.extend({
        className: 'user-mn',
        initialize: function (option) {
            _.extend(this, option);
            this.listenTo(this.parentView, 'render-profile', function () {
                this.parentView.changeView(this);
            });
        },
        render: function () {
            this.$el.html(template('#tpl-profile')(this.parentView.model.toJSON()));
            return this;
        },
        events: {
            'click .j-edit': function () {
                this.parentView.trigger('render-form');
            }
        }
    });

    win.LayoutView = LayoutView;
    win.ProfileForm = ProfileForm;
    win.ProfileView = ProfileView;


})(window);